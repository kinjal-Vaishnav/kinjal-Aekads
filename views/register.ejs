<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Register</title>
  <link rel="stylesheet" href="/css/teams.css" />
  <link rel="stylesheet" href="/css/screen.css" />
  <link rel="stylesheet" href="/css/playlist.css" />
  <link rel="stylesheet" href="/css/font.css" />
</head>
<style>

table {
  width: 100%;
  border-collapse: collapse;
}

table th, table td {
  padding: 10px;
  text-align: center; /* Center the text horizontally */
}

input[type="checkbox"] {
  transform: scale(1.2); /* Optional: Increase the size of checkboxes */
  margin: 0 auto; /* Horizontally center the checkboxes */
  display: block; /* Ensure the checkbox is treated as a block element */
  position: relative;
  top: 50%; /* Move the checkbox down by half of its height */
  transform: translateY(-50%); /* Center the checkbox vertically */
}

</style>
<body>
  <%- include('Dashboard') %>
  <div class="teams">
    <div class="home-playlist">
      <p>Home> <b>Teams</b></p>
    </div>

    <div class="member">
      <div class="members">
        <a href="/admin/users">Members</a>
      </div>
      <div class="New-members">
        <a href="/Dashboard/Teams/Addmember">New Member</a>
      </div>
      <div class="Logs">
        <a href="/admin/logs">Logs</a>
      </div>
    </div>

    <div class="mainData">
      <!-- User registration form -->
      <div class="member-form">
        <form id="registerForm" action="/register" method="post">
          <div class="form">
            <div class="formdata">
              <label for="name">Member Name</label>
              <input type="text" id="name" name="name" required>
            </div>
            <div class="formdata">
              <label for="email">Member Email</label>
              <input type="email" id="email" name="email" required>
            </div>
            <div class="formdata">
              <label for="role">Select Role</label>
              <select id="role" name="role" required>
                <option value="admin">Admin</option>
                <option value="editor">Editor</option>
                <option value="viewer">Viewer</option>
                <option value="sales">Sales</option>
              </select>
            </div>
            <div class="formdata">
              <label for="password">Password:</label>
              <input type="password" id="password" name="password" required>
            </div>
            <div class="formdata" style="display:flex; justify-content: center; background-color: #0D6EFD; color: white; padding: 10px; border-radius: 12px;">
              <button type="submit">Register</button>
            </div>
          </div>
        </form>
      </div>

      <!-- Permissions table -->
      <div class="table1" >
        <table>
          <thead>
            <tr>
              <th>PERMISSIONS</th>
              <th>VIEW</th>
              <th>CREATE</th>
              <th>UPDATE</th>
              <th>DELETE</th>
            </tr>
          </thead>
          <tbody >
            <!-- Define each permission with checkboxes -->
            <tr>
              <td>Screen</td>
              <td><input type="checkbox" name="permissions[sv]" form="registerForm" class="auto-check"></td>
              <td><input type="checkbox" name="permissions[sc]" form="registerForm" class="auto-check"></td>
              <td><input type="checkbox" name="permissions[su]" form="registerForm" class="auto-check"></td>
              <td><input type="checkbox" name="permissions[sd]" form="registerForm" class="auto-check"></td>
            </tr>
            <tr>
              <td>Playlist</td>
              <td><input type="checkbox" name="permissions[pv]" form="registerForm" class="auto-check"></td>
              <td><input type="checkbox" name="permissions[pc]" form="registerForm" class="auto-check"></td>
              <td><input type="checkbox" name="permissions[pu]" form="registerForm" class="auto-check"></td>
              <td><input type="checkbox" name="permissions[pd]" form="registerForm" class="auto-check"></td>
            </tr>
            <tr>
              <td>Library</td>
              <td><input type="checkbox" name="permissions[lv]" form="registerForm" class="auto-check"></td>
              <td><input type="checkbox" name="permissions[lc]" form="registerForm" class="auto-check"></td>
              <td><input type="checkbox" name="permissions[lu]" form="registerForm" class="auto-check"></td>
              <td><input type="checkbox" name="permissions[ld]" form="registerForm" class="auto-check"></td>
            </tr>
            <tr>
              <td>Proposal</td>
              <td><input type="checkbox" name="permissions[prv]" form="registerForm" class="auto-check"></td>
              <td><input type="checkbox" name="permissions[prc]" form="registerForm" class="auto-check"></td>
              <td><input type="checkbox" name="permissions[pru]" form="registerForm" class="auto-check"></td>
              <td><input type="checkbox" name="permissions[prd]" form="registerForm" class="auto-check"></td>
            </tr>
            <tr>
              <td>Live</td>
              <td><input type="checkbox" name="permissions[liv]" form="registerForm" class="auto-check"></td>
              <td><input type="checkbox" name="permissions[lic]" form="registerForm" class="auto-check"></td>
              <td><input type="checkbox" name="permissions[liu]" form="registerForm" class="auto-check"></td>
              <td><input type="checkbox" name="permissions[lid]" form="registerForm" class="auto-check"></td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
  </div>

  <script>
    document.querySelectorAll('.auto-check').forEach(function (checkbox) {
      checkbox.addEventListener('click', function () {
        console.log(`Checkbox clicked: ${this.name}, checked: ${this.checked}`);
        
        const row = this.closest('tr');

        // Get the relevant checkboxes in the row
        const viewCheckboxes = row.querySelectorAll('input[name="permissions[sv]"], input[name="permissions[pv]"], input[name="permissions[lv]"], input[name="permissions[prv]"], input[name="permissions[liv]"]');
        const createCheckboxes = row.querySelectorAll('input[name="permissions[sc]"], input[name="permissions[pc]"], input[name="permissions[lc]"], input[name="permissions[prc]"], input[name="permissions[lic]"]');
        const updateCheckboxes = row.querySelectorAll('input[name="permissions[su]"], input[name="permissions[pu]"], input[name="permissions[lu]"], input[name="permissions[pru]"], input[name="permissions[liu]"]');
        const deleteCheckboxes = row.querySelectorAll('input[name="permissions[sd]"], input[name="permissions[pd]"], input[name="permissions[ld]"], input[name="permissions[prd]"], input[name="permissions[lid]"]');

        // Update permission logic based on the checkbox clicked
        const updatePermission = () => {
          if (this.checked) {
            console.log(`Checking permissions related to ${this.name}`);
            // Check related permissions based on the checkbox clicked
            if (this.name.includes('d')) { // If Delete is checked
              viewCheckboxes.forEach(cb => {
                cb.checked = true;
                console.log(`Checked: ${cb.name}`);
              });
              createCheckboxes.forEach(cb => {
                cb.checked = true;
                console.log(`Checked: ${cb.name}`);
              });
              updateCheckboxes.forEach(cb => {
                cb.checked = true;
                console.log(`Checked: ${cb.name}`);
              });
              deleteCheckboxes.forEach(cb => {
                cb.checked = true;
                console.log(`Checked: ${cb.name}`);
              });
            } else if (this.name.includes('u')) { // If Update is checked
              viewCheckboxes.forEach(cb => {
                cb.checked = true;
                console.log(`Checked: ${cb.name}`);
              });
              createCheckboxes.forEach(cb => {
                cb.checked = true;
                console.log(`Checked: ${cb.name}`);
              });
              updateCheckboxes.forEach(cb => {
                cb.checked = true;
                console.log(`Checked: ${cb.name}`);
              });
            } else if (this.name.includes('c')) { // If Create is checked
              viewCheckboxes.forEach(cb => {
                cb.checked = true;
                console.log(`Checked: ${cb.name}`);
              });
              createCheckboxes.forEach(cb => {
                cb.checked = true;
                console.log(`Checked: ${cb.name}`);
              });
            } else if (this.name.includes('v')) { // If View is checked
              viewCheckboxes.forEach(cb => {
                cb.checked = true;
                console.log(`Checked: ${cb.name}`);
              });
            }
          } else {
            console.log(`Unchecking permissions related to ${this.name}`);
            // Uncheck related permissions if the checkbox is unchecked
            if (this.name.includes('d')) { // If Delete is unchecked
              viewCheckboxes.forEach(cb => {
                cb.checked = false;
                console.log(`Unchecked: ${cb.name}`);
              });
              createCheckboxes.forEach(cb => {
                cb.checked = false;
                console.log(`Unchecked: ${cb.name}`);
              });
              updateCheckboxes.forEach(cb => {
                cb.checked = false;
                console.log(`Unchecked: ${cb.name}`);
              });
              deleteCheckboxes.forEach(cb => {
                cb.checked = false;
                console.log(`Unchecked: ${cb.name}`);
              });
            } else if (this.name.includes('u')) { // If Update is unchecked
              if (!Array.from(deleteCheckboxes).some(cb => cb.checked)) {
                createCheckboxes.forEach(cb => {
                  cb.checked = false;
                  console.log(`Unchecked: ${cb.name}`);
                });
                viewCheckboxes.forEach(cb => {
                  cb.checked = false;
                  console.log(`Unchecked: ${cb.name}`);
                });
              }
            } else if (this.name.includes('c')) { // If Create is unchecked
              if (!Array.from(updateCheckboxes).some(cb => cb.checked)) {
                viewCheckboxes.forEach(cb => {
                  cb.checked = false;
                  console.log(`Unchecked: ${cb.name}`);
                });
              }
            }
          }
        };

        // Execute the permission update logic
        updatePermission();
      });
    });
  </script>
</body>

</html>
