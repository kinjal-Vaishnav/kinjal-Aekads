<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Create Proposal</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css"
        integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Get the menu icon and nav-links elements
            const menuToggle = document.getElementById("menuToggle");
            const navLinks = document.getElementById("navLinks");

            // Add click event listener to toggle the navbar visibility
            menuToggle.addEventListener("click", function () {
                // Check the current display style of navLinks
                if (navLinks.style.display === "flex" || navLinks.style.display === "") {
                    navLinks.style.display = "none"; // Hide navbar
                } else {
                    navLinks.style.display = "flex"; // Show navbar
                }
            });
        });


    </script>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- <link rel="stylesheet" href="/css/dashboard.css"> -->
</head>
<style>
    .table>:not(caption)>*>* {
        padding: .5rem .5rem;
        background-color: #fff !important;
        border-bottom-width: var(--bs-border-width);
        box-shadow: inset 0 0 0 9999px var(--bs-table-accent-bg);
    }

    .table-striped>tbody>tr:nth-of-type(odd)>* {
        background-color: #fff !important;
    }

    .table-hover>tbody>tr:hover>* {
        --bs-table-accent-bg: #fff !important;
        color: var(--bs-table-hover-color);
    }

    .table-striped>tbody>tr:nth-of-type(odd)>* {
        --bs-table-accent-bg: #fff !important;
        color: var(--bs-table-striped-color);
    }
</style>

 

    <body style="background-color: #f1faff;padding: 12px">

        <div class="jayho">
            <h1 style="font-size: 23px; color: rgb(17, 17, 17)">PROPOSALS</h1>
            <svg width="36" id="show-proposal-form" height="36" viewBox="0 0 36 36" fill="none"
                xmlns="http://www.w3.org/2000/svg" id="openFormBtn3">
                <circle cx="17.625" cy="17.625" r="17.25" fill="#F9F9FA" stroke="#37393A" stroke-width="0.75" />
                <g clip-path="url(#clip0_4319_3938)">
                    <path d="M18.0007 11.636V24.364" stroke="#37393A" stroke-width="1.5" stroke-linecap="round"
                        stroke-linejoin="round" />
                    <path d="M11.6367 18H24.3646" stroke="#37393A" stroke-width="1.5" stroke-linecap="round"
                        stroke-linejoin="round" />
                </g>
                <defs>
                    <clipPath id="clip0_4319_3938">
                        <rect width="18" height="18" fill="white" transform="translate(5.27344 18) rotate(-45)" />
                    </clipPath>
                </defs>
            </svg>
        </div>


        <!-- Proposal Form Popup -->
        <div id="proposal-popup" style="display:none;">
            <div class="popup-content">
                <div class="header">

                    <h6 style="font-size: 20px; margin-bottom: 1.5rem;">Create Proposal

                        <svg id="close-popup" style="float: right; cursor: pointer;" width="24" height="24"
                            viewBox="0 0 20 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M14.5712 5.81543L5.06641 17.3749" stroke="#37393A" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round" />
                            <path d="M5.06641 5.81543L14.5712 17.3749" stroke="#37393A" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round" />
                        </svg>
                    </h6>
                </div>
                <form id="proposal-form" action="/proposals/create" method="POST" class="row g-3">
                    <div class="col-12">
                        <label for="clientName" class="form-label">Client Name:</label>
                        <input type="text" id="clientName" name="clientName" class="form-control" required>
                    </div>

                    <div class="col-md-6">
                        <label for="startDate" class="form-label">Starts on:</label>
                        <input type="date" id="startDate" name="startDate" class="form-control" required>
                    </div>

                    <div class="col-md-6">
                        <label for="endDate" class="form-label">Runs For:</label>
                        <input type="number" id="endDate" name="endDate" class="form-control" required>
                    </div>

                    <div class="col-md-6">
                        <label for="slotDuration" class="form-label">Slot Duration:</label>
                        <input type="number" id="slotDuration" name="slotDuration" class="form-control" step="5"
                            min="10" required>
                    </div>

                    <div class="city-dropdown">
                        <h6>Cities</h6>
                        <div class="input-container" id="inputContainer">
                            <input type="text" class="form-control" name="cities" id="inputField"
                                placeholder="Click to select" required readonly style="width: 100%;">
                        </div>
                        <div class="dropdown" id="dropdownList">

                            <div class="dropdown-item" onclick="selectItem('Ahmedabad')">Ahmedabad</div>
                            <div class="dropdown-item" onclick="selectItem('Gandhinagar')">Gandhinagar</div>
                            <div class="dropdown-item" onclick="selectItem('Surat')">Surat</div>
                            <!-- Add other city options here -->
                        </div>
                        <!-- Hidden input field to store selected cities -->
                        <input type="hidden" name="selectedCities" id="selectedCities">
                    </div>

                    <div class="col-md-6">
                        <div class="col-md-6">
                            <label for="clientType" class="form-label">Client Type:</label>
                            <select id="clientType" name="clientType" class="form-select" required>
                                <option value="National Agency">National Agency</option>
                                <option value="Local Business">Local Business</option>
                                <option value="Direct Client (National)">Direct Client (National)</option>
                                <option value="Direct Client (Regional / Hyper-local)">Direct Client (Regional /
                                    Hyper-local)</option>
                                <option value="GOVT/PSU">GOVT/PSU</option>
                            </select>

                        </div>
                    </div>

                    <div class="col-md-6">
                        <label for="propertyType" class="form-label">Property Type:</label>
                        <select id="propertyType" name="propertyType" class="form-select" required>
                            <option value="Residential">Residential</option>
                            <option value="Corporate">Corporate</option>

                            <option value="Commercial">Commercial</option>
                            <option value="Digital Billboard">Digital Billboard</option>
                        </select>
                    </div>

                    <div class="col-md-6">
                        <label for="plan" class="form-label">Plan:</label>
                        <select id="plan" name="plan" class="form-select" required>
                            <option value="Standard">Standard</option>
                            <option value="Premium">Premium</option>
                        </select>
                    </div>

                    <div class="col-md-6">
                        <label for="advertiserTag" class="form-label">Advertiser Tag:</label>
                        <input type="text" id="advertiserTag" name="advertiserTag" class="form-control" required>
                    </div>
                    <div class="col-md-6" style="display: flex;gap: 15px;">
                        <label for="popRequired" class="form-label">POP Required?</label>
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" id="popRequired" name="popRequired">
                        </div>
                    </div>

                    <div class="col-md-6" style="display: flex;gap: 15px;">
                        <label for="geoTagging" class="form-label">Geo Tagging Required?</label>
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" id="geoTagging" name="geoTagging">
                        </div>
                    </div>




                    <div class="col-12">
                        <button type="submit" class="btn btn-primary mt-3 w-100">Create Proposal</button>

                    </div>
                </form>
            </div>
        </div>





        <style>
            /* Navbar styles */
            .navbar {
                margin: 1px auto;
                width: 100%;
                max-width: 1600px;
                gap: 141px;
                display: flex;
                justify-content: flex-start;
                align-items: center;
                border-bottom: 2px solid #e0e4eb;
                position: relative;
            }

            .nav-links {
                display: flex;
                gap: 20px;
            }

            .menu-icon {
                display: none;
                background: none;
                border: none;
                font-size: 28px;
                cursor: pointer;
            }

            /* Mobile navbar adjustments */
            @media (max-width: 768px) {
                .navbar {
                    justify-content: space-between;
                }

                /* .nav-links {
                    display: none;
                    
                    flex-direction: column;
                    gap: 10px;
                    position: static;
                    top: 60px;
                    left: 0;
                    width: 100%;
                    background-color: #fff;
                    padding: 10px;
                    border-top: 2px solid #e0e4eb;
                } */

                .menu-icon {
                    /* margin-left: 326px;
  margin-bottom: 173px; */
                    display: block;
                    /* Show hamburger icon */
                }

                .navbar a {
                    color: #333;
                    font-weight: bold;
                    text-align: center;
                    text-decoration: none;
                }

                .navbar a.active,
                .navbar a:hover {
                    color: hsl(219, 94%, 48%);
                    border-bottom: 3px solid hsl(219, 94%, 48%);
                }
            }
        </style>


        <!--navabarg-->

        <!-- Navbar -->
        <svg class="menu-icon" id="menuToggle" style="height: 27px;
            border-radius: 23px;
            width: 50px;
            color: #fff;
            background-color: #e1e1e8;
            float: right;
            margin: 0px 24px;" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M3 12H21" stroke="black" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
            <path d="M3 6H21" stroke="black" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
            <path d="M3 18H21" stroke="black" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
        </svg>

        <!-- Navbar -->
        <div class="navbar">
            <div class="nav-links" id="navLinks">
                <a href="#" id="InDiscussionTab" class="active">In Discussion</a>
                <a href="#" id="pendingActivationTab">Pending Activation</a>
                <a href="#" id="activeTab">Active</a>
                <a href="#" id="discardTab">Discard</a>
            </div>
        </div>

        <br />

        <div class="search-container">
            <div class="search-icon">
                <i class="fa-solid fa-magnifying-glass"></i>
            </div>
            <input type="text" class="search-input" id="searchInput" placeholder="Search" />
        </div>


        <style>
            /* Custom Popup Style */
            #proposal-popup {
                position: fixed;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                width: 90%;
                /* Default to 90% width for mobile */
                max-width: 1100px;
                /* Max width for desktop */
                background-color: #fff;
                box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
                z-index: 1000;
                padding: 30px;
                border-radius: 10px;
            }

            /* Desktop view - no scroll on larger screens unless overflow */
            @media (min-width: 769px) {
                #proposal-popup {
                    max-height: none;
                    overflow-y: visible;
                }
            }

            /* Mobile view - enable scrollbar when content exceeds screen height */
            @media (max-width: 768px) {
                #proposal-popup {
                    max-height: 90vh;
                    /* Limit the height to 90% of the viewport */
                    overflow-y: auto;
                    /* Enable vertical scroll if content overflows */
                    padding: 15px;
                }
            }

            /* Button styles */
            button#close-popup {
                background-color: #dc3545;
                color: white;
                margin-top: 10px;
            }

            button#close-popup:hover {
                background-color: #c82333;
            }




            /* Popup heading */
            #proposal-popup h2 {
                text-align: center;
                margin-bottom: 20px;
                font-size: 2rem;
            }

            @media (max-width: 768px) {
                #proposal-popup h2 {
                    font-size: 1.5rem;
                }
            }

            /* Search container */
            .search-container {
                margin: 1px auto;
                width: 100%;
                max-width: 1600px;
                display: flex;
                align-items: center;
                background: rgba(28, 28, 28, 0.05);
                border: 1px solid #ddd;
                padding: 10px 15px;
                box-shadow: 0 2px 4px rgba(0, 0, 0, 0.25);
                border-radius: 10px;
                margin-bottom: 1.5%;
            }

            .search-icon {
                margin-right: 10px;
                display: flex;
                align-items: center;
            }

            .search-input {
                border: none;
                outline: none;
                background-color: transparent;
                width: 100%;
                font-size: 16px;
            }

            /*1 table */
            .table1 {

                margin: 1px auto;
                width: 100%;
                max-width: 1600px;
                background: rgba(255, 255, 255, 1);
                border-radius: 15px;
                box-shadow: 0 0 10px rgba(0, 0, 0, 0.25);
                overflow-x: auto;
                white-space: nowrap;
                position: relative;
                max-height: 600px;
                height: 64%;
            }

            /* Mobile view adjustments */
            @media (max-width: 576px) {
                .table1 {
                    max-width: 100%;
                    height: auto;
                    max-height: 400px;
                    border-radius: 10px;
                }

                table,
                thead,
                tbody,
                th,
                td,
                tr {
                    display: block;
                }

                tr {
                    margin-bottom: 10px;
                }

                td {

                    display: grid;
                    justify-content: space-between;
                    padding: 10px;
                    border: none;
                }

                td::before {
                    content: attr(data-label);
                    font-weight: bold;
                }
            }

            /* Tablet view */
            @media (min-width: 577px) and (max-width: 768px) {
                .table1 {
                    max-width: 100%;
                    height: auto;
                    max-height: 500px;
                    padding: 5px;
                }
            }

            /* Desktop view */
            @media (min-width: 769px) {
                .table1 {
                    max-width: 1200px;
                    height: auto;
                    max-height: 600px;
                    padding: 10px;
                }
            }

            /* Large desktop view */
            @media (min-width: 1200px) {
                .table1 {
                    max-width: 1600px;
                    height: 64%;
                    max-height: 600px;
                }
            }

            /* Striped table rows */
            .table-striped>tbody>tr:nth-of-type(odd)>* {
                background-color: #f9f9f9;
            }

            /* Flexbox utility */
            .jayho {
                display: flex;
                gap: 6px;
                margin: 35px 0px;
                width: 323px;
            }


            th {
                color: rgb(0, 0, 0);
                font-size: 14px;
                font-weight: 500;
                background-color: #f8f9fa;
                position: sticky;
                top: 0;
                padding: 10px 0;
                border-bottom: 1px solid #dee2e6;
                text-align: center;
            }

            /* Basic table styling */
            table {
                width: 100%;
                border-collapse: collapse;
            }

            td,
            th {
                padding: 8px;
                text-align: left;
                /* border: 1px solid #ddd; */
            }

            /* Navbar */
            /* .navbar {
  display: flex;
  justify-content: space-around;
  padding: 10px;
  } */


            /* City Dropdown */
            .city-dropdown {
                position: relative;
                margin-bottom: 20px;
            }

            #dropdownList {
                position: absolute;
                width: 100%;
                max-height: 150px;
                overflow-y: auto;
                background-color: #fff;
                border: 1px solid #ddd;
                display: none;
                z-index: 10;
            }

            #dropdownList .dropdown-item {
                padding: 10px;
                cursor: pointer;
            }

            #dropdownList .dropdown-item:hover {
                background-color: #f0f0f0;
            }

            /* Margin utility */
            .mt-4 {
                margin-top: 0 !important;
            }
        </style>


        <!-- In Discussion Table -->
        <div id="inDiscussionTable" class="table-container">
            <div class="table1" style="height: 587px;">
                <% if (proposals.length> 0) { %>
                    <table class="table table-striped table-hover mt-4">
                        <thead class="table-primary">
                            <tr>
                                <th style="font-size: 16px;">Proposal Name</th>
                                <th style="font-size: 16px;">Summary</th>
                                <th style="font-size: 16px;">Inventory Status</th>
                                <th style="font-size: 16px;">Reach</th>
                                <th style="font-size: 16px;">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% proposals.forEach(proposal=> {
                                // Calculate the end date by adding the end_date to the start date
                                const startDate = new Date(proposal.start_date);
                                const endDate = new Date(startDate);
                                endDate.setDate(startDate.getDate() + proposal.end_date);

                                // Split the cities by comma and count the number of cities
                                const citiesArray = proposal.cities.split(',').map(city => city.trim());
                                %>
                                <tr>
                                    <td>
                                        <%= proposal.client_name %><br>
                                            <%= startDate.toLocaleDateString() %> - <%= endDate.toLocaleDateString() %>
                                                    <br>
                                                    (<%= proposal.property_type %>)
                                    </td>
                                    <td>
                                        <!-- Summary of proposal -->
                                        <%= proposal.summary || 'N/A' %>
                                    </td>
                                    <td>
                                        <!-- Inventory status -->
                                        <%= proposal.inventory_status || 'No data' %>
                                    </td>
                                    <td>
                                        <!-- Display number of cities -->
                                        <%= citiesArray.length %> cities
                                    </td>
                                    <td>
                                        <!-- Approve button linking to the specific proposal page -->
                                        <div>
                                            <a href="/proposals/propertiesSelect?proposalId=<%= proposal.id %>">
                                                <button class="btn btn-primary">Edit</button>
                                            </a>

                                            <a href="#" onclick="pendingActivationProposal(`<%= proposal.id %>`)">
                                                <button class="btn btn-primary">Submit</button>
                                            </a>

                                            <a href="#" onclick="discardProposal(`<%= proposal.id %>`)">
                                                <!-- Updated to call discard function -->
                                                <button class="btn btn-danger">Discard</button>
                                                <!-- Changed class to btn-danger for emphasis -->
                                            </a>
                                        </div>


                                    </td>
                                </tr>
                                <% }) %>
                        </tbody>
                    </table>
                    <% } else { %>
                        <!-- Message for no data -->
                        No proposals available.

                        <% } %>
            </div>
        </div>


        <script>
            function pendingActivationProposal(proposalId) {
                // Make an AJAX request to submit the proposal
                fetch('/proposals/SetpendingActivation', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ proposalId: proposalId }),
                })
                    .then(response => {
                        if (response.ok) {
                            return response.json();
                        } else {
                            return response.text().then(text => { // Log response text for debugging
                                throw new Error(`Network response was not ok: ${text}`);
                            });
                        }
                    })
                    .then(data => {
                        // Show success message
                        alert('Proposal submitted successfully!');

                        // Optionally implement logic to remove this row from the current table
                        // and add it to the pending activation table.
                        // Example: moveRowToPendingActivation(data.updatedProposal); // Implement this function as needed

                        // Reload the proposals table if necessary
                        location.reload(); // Simple way to refresh the page
                    })
                    .catch(error => {
                        console.error('There was a problem with the fetch operation:', error);
                        alert('There was an error submitting the proposal: ' + error.message);
                    });
            }


            function discardProposal(proposalId) {
                // Make an AJAX request to discard the proposal
                fetch('/proposals/SetDiscarded', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ proposalId: proposalId }),
                })
                    .then(response => {
                        if (response.ok) {
                            return response.json();
                        } else {
                            return response.text().then(text => {
                                throw new Error(`Network response was not ok: ${text}`);
                            });
                        }
                    })
                    .then(data => {
                        alert('Proposal discarded successfully!');

                        // Reload the proposals table to reflect the changes
                        location.reload(); // Simple way to refresh the page
                    })
                    .catch(error => {
                        console.error('There was a problem with the fetch operation:', error);
                        alert('There was an error discarding the proposal: ' + error.message);
                    });
            }



            function setToAdminAproval(proposalId) {
                // Make an AJAX request to update the proposal status
                fetch('/proposals/setToAdminAproval', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ proposalId: proposalId }),
                })
                    .then(response => {
                        if (response.ok) {
                            return response.json();
                        } else {
                            return response.text().then(text => {
                                throw new Error(`Network response was not ok: ${text}`);
                            });
                        }
                    })
                    .then(data => {
                        alert('Proposal updated successfully!');

                        // Reload the proposals table to reflect the changes
                        location.reload(); // Simple way to refresh the page
                    })
                    .catch(error => {
                        console.error('There was a problem with the fetch operation:', error);
                        alert('There was an error updating the proposal: ' + error.message);
                    });
            }

        </script>




        <!-- Pending Activation Table -->
        <div id="pendingActivationTable" class="table-container" style="display:none;">
            <div class="table1" style="height: 587px">
                <table class="table table-striped table-hover mt-4">
                    <thead class="table-primary">
                        <tr>
                            <th>Proposal Name</th>
                            <th>Summary</th>
                            <th>Inventory status</th>
                            <th>Reach</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% if (pendingProposals && pendingProposals.length> 0) { %>
                            <% pendingProposals.forEach(proposal=> {
                                // Calculate the end date by adding the end_date to the start date
                                const startDate = new Date(proposal.start_date);
                                const endDate = new Date(startDate);
                                endDate.setDate(startDate.getDate() + proposal.end_date);

                                // Split the cities by comma and count the number of cities
                                const citiesArray = proposal.cities.split(',').map(city => city.trim());
                                %>
                                <tr>
                                    <td>
                                        <%= proposal.client_name %><br>
                                            <%= startDate.toLocaleDateString() %> - <%= endDate.toLocaleDateString() %>
                                                    <br>
                                                    (<%= proposal.property_type %>)
                                    </td>
                                    <td>
                                        <!-- Summary of proposal -->
                                        <%= proposal.summary || 'N/A' %>
                                    </td>
                                    <td>
                                        <!-- Inventory status -->
                                        <%= proposal.inventory_status || 'No data' %>
                                    </td>
                                    <td>
                                        <!-- Display number of cities -->
                                        <%= citiesArray.length %> cities
                                    </td>
                                    <td>
                                        <a href="#" onclick="setToAdminAproval(`<%= proposal.id %>`)">
                                            <button class="btn btn-primary">Active</button>
                                        </a>

                                    </td>
                                </tr>
                                <% }) %>
                                    <% } else { %>
                                        <tr>
                                            <td colspan="5">No pending proposals available.</td>
                                        </tr>
                                        <% } %>
                    </tbody>
                </table>
            </div>
        </div>
        <!-- Active Table -->
        <div id="activeTable" class="table-container" style="display:none;">
            <div class="table1" style="height: 587px">
                <table class="table table-striped table-hover mt-4">
                    <thead class="table-primary">
                        <tr>
                            <th>Proposal Name</th>
                            <th>Summary</th>
                            <th>Inventory status</th>
                            <th>Reach</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% if (waitingOrActive && waitingOrActive.length> 0) { %>
                            <% waitingOrActive.forEach(proposal=> {
                                // Calculate the end date by adding the end_date to the start date
                                const startDate = new Date(proposal.start_date);
                                const endDate = new Date(startDate);
                                endDate.setDate(startDate.getDate() + proposal.end_date);

                                // Split the cities by comma and count the number of cities
                                const citiesArray = proposal.cities.split(',').map(city => city.trim());
                                %>
                                <tr>
                                    <td>
                                        <%= proposal.client_name %><br>
                                            <%= startDate.toLocaleDateString() %> - <%= endDate.toLocaleDateString() %>
                                                    <br>
                                                    (<%= proposal.property_type %>)
                                    </td>
                                    <td>
                                        <!-- Summary of proposal -->
                                        <%= proposal.summary || 'N/A' %>
                                    </td>
                                    <td>
                                        <!-- Inventory status -->
                                        <%= proposal.inventory_status || 'No data' %>
                                    </td>
                                    <td>
                                        <!-- Display number of cities -->
                                        <%= citiesArray.length %> cities
                                    </td>
                                    <td>
                                        <%= proposal.status || 'No data' %>
                                      

                                    </td>
                                </tr>
                                <% }) %>
                                    <% } else { %>
                                        <tr>
                                            <td colspan="5">No pending proposals available.</td>
                                        </tr>
                                        <% } %>
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Discard Table -->
        <div id="discardTable" class="table-container" style="display:none;">
            <div class="table1" style="height: 587px">
                <table class="table table-striped table-hover mt-4">
                    <thead class="table-primary">
                        <tr>
                            <th>Proposal Name</th>
                            <th>Summary</th>
                            <th>Inventory status</th>
                            <th>Reach</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% if (discardProposals && discardProposals.length> 0) { %>
                            <% discardProposals.forEach(proposal=> {
                                // Calculate the end date by adding the end_date to the start date
                                const startDate = new Date(proposal.start_date);
                                const endDate = new Date(startDate);
                                endDate.setDate(startDate.getDate() + proposal.end_date);

                                // Split the cities by comma and count the number of cities
                                const citiesArray = proposal.cities.split(',').map(city => city.trim());
                                %>
                                <tr>
                                    <td>
                                        <%= proposal.client_name %><br>
                                            <%= startDate.toLocaleDateString() %> - <%= endDate.toLocaleDateString() %>
                                                    <br>
                                                    (<%= proposal.property_type %>)
                                    </td>
                                    <td>
                                        <!-- Summary of proposal -->
                                        <%= proposal.summary || 'N/A' %>
                                    </td>
                                    <td>
                                        <!-- Inventory status -->
                                        <%= proposal.inventory_status || 'No data' %>
                                    </td>
                                    <td>
                                        <!-- Display number of cities -->
                                        <%= citiesArray.length %> cities
                                    </td>
                                    <td>

                                    </td>
                                </tr>
                                <% }) %>
                                    <% } else { %>
                                        <tr>
                                            <td colspan="5">No discarded proposals available.</td>
                                        </tr>
                                        <% } %>
                    </tbody>
                </table>
            </div>
        </div>


        <!-- Include jQuery for simplicity -->
        <script>
            $(document).ready(function () {
                $('#show-proposal-form').on('click', function () {
                    $('#proposal-popup').show();
                });

                $('#close-popup').on('click', function () {
                    $('#proposal-popup').hide();
                });
            });



            const inputField = document.getElementById('inputField');
            const dropdownList = document.getElementById('dropdownList');
            const selectedCities = document.getElementById('selectedCities');
            let cities = []; // Array to store selected cities

            // Function to select a city from the dropdown
            function selectItem(city) {
                // If city is already selected, remove it from the list
                if (cities.includes(city)) {
                    cities = cities.filter(c => c !== city);
                } else {
                    cities.push(city); // Add city to the list if not already selected
                }

                // Update the input field to show selected cities
                inputField.value = cities.join(', ');
                // Store selected cities in the hidden input
                selectedCities.value = cities.join(', ');

                // Hide dropdown if the user is done selecting (optional)
                // dropdownList.style.display = 'none'; 
            }

            // Toggle dropdown visibility when input field is clicked
            inputField.addEventListener('click', () => {
                dropdownList.style.display = dropdownList.style.display === 'block' ? 'none' : 'block';
            });

            // Close the dropdown if clicked outside
            document.addEventListener('click', function (event) {
                if (!inputField.contains(event.target) && !dropdownList.contains(event.target)) {
                    dropdownList.style.display = 'none';
                }
            });






            //nabar table

            const tabs = document.querySelectorAll('.navbar a');
            const tables = {
                'InDiscussionTab': document.getElementById('inDiscussionTable'),
                'pendingActivationTab': document.getElementById('pendingActivationTable'),
                'activeTab': document.getElementById('activeTable'),
                'discardTab': document.getElementById('discardTable')
            };

            tabs.forEach(tab => {
                tab.addEventListener('click', function (e) {
                    e.preventDefault();
                    tabs.forEach(t => t.classList.remove('active')); // Remove active class from all tabs
                    this.classList.add('active'); // Add active class to clicked tab

                    Object.values(tables).forEach(table => table.style.display = 'none'); // Hide all tables
                    tables[this.id].style.display = 'block'; // Show the corresponding table
                });
            });




            function approveProposal(proposalId) {
                // Send approve request to server
                fetch(`/approveProposal/${proposalId}`, {
                    method: 'POST'
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            window.location.reload();
                        }
                    })
                    .catch(error => console.error('Error:', error));
            }
        </script>



        <style>
            .nav-links {
                display: flex;
                gap: 190px;
            }

            /* Navbar styles */
            .navbar {
                margin: 1px auto;
                width: 100%;
                max-width: 1600px;
                gap: 141px;
                display: flex;
                justify-content: flex-start;
                border-bottom: 2px solid #e0e4eb;
            }


            .navbar a.active,
            .navbar a:hover {
                color: hsl(219, 94%, 48%);
                border-bottom: 3px solid hsl(219, 94%, 48%);
            }

            /* Mobile navbar adjustments */
            @media (max-width: 768px) {
                .navbar {
                    flex-direction: column;
                    gap: 10px;
                }
            }


            .navbar a {
                text-decoration: none;
                padding: 10px;
                color: #333;
                font-weight: bold;
                text-align: center;
            }

            @media (max-width: 576px) {
                .navbar {
                    flex-direction: column;
                    text-align: center;
                }

                .navbar a {
                    margin-bottom: 5px;
                }
            }

            /* Custom Popup Style */
            #proposal-popup {
                position: fixed;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                width: 90%;
                /* Default to 90% width for mobile */
                max-width: 1100px;
                /* Max width for desktop */
                background-color: #fff;
                box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
                z-index: 1000;
                padding: 30px;
                border-radius: 10px;
            }

            /* Desktop view - no scroll on larger screens unless overflow */
            @media (min-width: 769px) {
                #proposal-popup {
                    max-height: none;
                    overflow-y: visible;
                }
            }

            /* Mobile view - enable scrollbar when content exceeds screen height */
            @media (max-width: 768px) {
                #proposal-popup {
                    max-height: 90vh;
                    /* Limit the height to 90% of the viewport */
                    overflow-y: auto;
                    /* Enable vertical scroll if content overflows */
                }
            }

            /* Button styles */
            button#close-popup {
                background-color: #dc3545;
                color: white;
                margin-top: 10px;
            }

            button#close-popup:hover {
                background-color: #c82333;
            }

            /*1 table */
            .table1 {
                margin-top: 20px;
            }

            /* Navbar styles */


            #proposal-popup h2 {
                text-align: center;
                margin-bottom: 20px;
            }

            /* @media (max-width: 768px) {
  #proposal-popup {
      width: 95%;
      padding: 15px;
  }
  
  #proposal-popup .popup-content {
      padding: 0;
  }
  } */
        </style>
        <style>
            .table>:not(caption)>*>* {
                padding: .5rem .5rem;
                border-bottom-width: var(--bs-border-width);
                box-shadow: inset 0 0 0 9999px var(--bs-table-accent-bg);
            }

            td {
                background-color: #fff;
            }
        </style>
        <br>



        <a href="/logout" class="btn btn-danger">Logout</a>
    </body>

</html>