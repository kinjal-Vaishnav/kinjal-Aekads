<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Live</title>
    <link rel="icon" type="image/png" href="https://res.cloudinary.com/dqfnwh89v/image/upload/v1724408615/qxvvfcf7ftgklhl2k03v.png">
    <link rel="stylesheet" href="/css/playlist.css" />
  <link rel="stylesheet" href="/css/font.css" />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>

<body>
    <%- include('Dashboard') %>
    <div class="playlist">
        <header>
            <div class="home-playlist">
                <p>Home><b>LiveContent</b></p>
            </div>
            <div class="search-newplaylist">
                <input type="search" placeholder="Search" id="searchInput">
                <button class="newPlaylist" onclick="addPlaylistBox()">
                    <span>+</span>New Live Content
                </button>
            </div>
        </header>
        <div class="create-playlist" id="overlay">
            <div class="newScreen">
                <div class="newScreen-header">
                    <h2>New Live Content</h2>
                    <button class="close-btn" onclick="hideNewScreen()">Ã—</button>
                </div>
                <hr />
                <div class="addNewScreen-form">
                    <div class="form-class">
                        <label>Live Name</label>
                        <input type="text" name="liveName" id="liveName" required />
                    </div>
                    <div class="form-class">
                        <label>Live Description</label>
                        <textarea name="liveDescription" id="liveDescription" required></textarea>
                    </div>
                    <div class="form-class btn">
                        <button id="createPlaylistButton">Share Live Content</button>
                    </div>
                </div>
            </div>
        </div>
        
        




































            <div class="showPlaylists">
                <% if (liveData && liveData.length > 0) { %>
                    <% liveData.forEach(liveItem => { %>
                    <div class="playlist-items">
                      <div class="playlist-img">
                       
                      </div>
                      <div style="display: flex; justify-content: space-between; gap: 10px;">
                      
                    <div>
                      <div class="playlist-info">
                        <p style="font-size: 22px;">
                            <%= truncateText(liveItem.name, 20) %>
                            <% function truncateText(text, maxLength) { if (text.length> maxLength) {
                              return text.substring(0, maxLength) + '...';
                              }
                              return text;
                              }
                              %></p>
                      </div>
                      <div class="playlist-info3">
                        <p style="font-size: 14px;">
                          <%= truncateText(liveItem.description, 20) %>
                            <% function truncateText(text, maxLength) { if (text.length> maxLength) {
                              return text.substring(0, maxLength) + '...';
                              }
                              return text;
                              }
                              %>
                        </p>
                      </div>
                    </div>
                    <div>
                      <div class="playlist-info2">
                       <button style="display: none;" onclick="location.href='/Dashboard/LiveContent/liveEditLink/<%=liveItem.id %>'">Edit</button>
                        <button2 onclick="deleteLive('<%= liveItem.id %>')">Delete</button2>
                      </div>
                    </div>
                  </div>
                    </div>
                    <% }); %>
                      <% } else { %>
                        <p>No Live available.</p>
                        <% } %>
              </div>













    </div>
    <script>
        let searchInput = document.getElementById('searchInput');

        function filterLiveContent() {
            const filter = searchInput.value.toLowerCase();
            const liveItems = document.querySelectorAll('.playlist-items');
            liveItems.forEach(liveItem => {
                const liveName = liveItem.querySelector('.playlist-info p').textContent.toLowerCase();
                if (liveName.includes(filter)) {
                    liveItem.style.display = '';
                } else {
                    liveItem.style.display = 'none';
                }
            });
        }

        searchInput.addEventListener('input', filterLiveContent);
        window.addEventListener('load', filterLiveContent);

        function addPlaylistBox() {
            document.getElementById("overlay").style.display = "flex";
        }

        function hideNewScreen() {
            document.getElementById("overlay").style.display = "none";
        }

        document.getElementById("createPlaylistButton").addEventListener("click", function (event) {
            const liveName = document.getElementById("liveName").value;
            const liveDescription = document.getElementById("liveDescription").value;

            if (!liveName || !liveDescription) {
                alert("Please fill in all required fields.");
                event.preventDefault();
                return;
            }

            sessionStorage.setItem("liveName", liveName);
            sessionStorage.setItem("liveDescription", liveDescription);

            window.location.href = "/Dashboard/LiveContent/liveLink";
        });

        async function deleteLive(liveId) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then(async (result) => {
                if (result.isConfirmed) {
                    try {
                        const response = await fetch(`/Dashboard/LiveContent/deletePlaylist/${liveId}`, {
                            method: "DELETE",
                        });

                        if (!response.ok) {
                            throw new Error("Failed to delete LiveData");
                        }

                        const responseData = await response.json();
                        console.log("LiveData deletion response:", responseData);

                        Swal.fire(
                            'Deleted!',
                            'Your LiveData has been deleted.',
                            'success'
                        ).then(() => {
                            window.location.reload();
                        });

                    } catch (error) {
                        console.error("Error deleting LiveData:", error);
                        Swal.fire(
                            'Error!',
                            'Failed to delete LiveData. Please try again.',
                            'error'
                        );
                    }
                }
            });
        }

        window.deleteLive = deleteLive;
    </script>
</body>

</html>
