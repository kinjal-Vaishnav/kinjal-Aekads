<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="icon" type="image/png" href="https://res.cloudinary.com/dqfnwh89v/image/upload/v1724408615/qxvvfcf7ftgklhl2k03v.png">

    <link rel="stylesheet" href="/css/font.css" />

    <link rel="stylesheet" href="/css/playlist.css" />

    <title>Dashboard</title>
    <style>
        /* body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            height: 100%;
            width: 100%;
            background-color: #F1FAFF;
        } */

        .container {
            height: 100%;
            width: 50%;
            /* margin: auto; */
            padding: 10px;
            /* border: 2px solid black; */
            /* background-color: #F1FAFF; */
        }

        header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            /* padding: 20px 0; */
            /* background: #ffffff;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); */
        }

        header h1 {
            margin: 0;
        }

        header .buttons {
            display: flex;
            gap: 10px;
            margin-bottom: 10px;
            margin-top: 10px;
            margin-right: 10px;
        }


        header .btn1 {
            display: flex;
            align-items: center;
            padding: 15px 17px;
            gap: 3px;

            height: 41.82px;
            background: #20C997;
            box-shadow: 0px 2px 3px rgba(0, 0, 0, 0.25);
            border-radius: 28.75px;
            border: none;
            color: #fff;
            text-align: center;
            cursor: pointer;

        }

        header .btn1:hover {
            background: #16A178;
        }

        .stats-container {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
            justify-content: space-between;
            margin-top: 10px;
        }

        .stat-item {
            padding: 20px;
            flex: 1 1 calc(20% - 10px);
            border-radius: 10px;
            text-align: center;
            color: #333;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            margin-bottom: 10px;
            
        }
        .stat-item:hover{
            box-shadow: 0px 4px 7px 0px #00000080;
        }

        #total-screens {
            background-color: #b3d1ff;
        }

        #online-screens {
            background-color: #b3ffb3;
        }

        #offline-screens {
            background-color: #ffb3b3;
        }

        #total-media-files {
            background-color: #ffffb3;
        }

        #storage-used {
            background-color: #e6e6e6;
        }

        .stat-item p {
            margin: 0;
            font-size: 18px;
        }

        .stat-item h2 {
            margin: 10px 0 0;
            font-size: 36px;
        }

        .main-content {
            display: flex;
            /* flex-wrap: wrap; */
            justify-content: center;
            width: 100%;
            align-items: center;
            gap: 15px;
            margin-top: 10px;
        }

        .screens,
        .map {
            flex: 1 1 50%;
            background: #fff;
            padding: 15px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        /* .screens h2, .map h2, .activity-log h2 {
            margin-top: 0;
        } */

        .action {
            display: flex;
            /* justify-content: space-evenly; */
            /* text-align: center; */
            gap: 10px;
            /* Adds a minimum space of 5px between flex items */
        }

        table {
            width: 100%;
            border-collapse: collapse;
            /* border: 1px solid #979797; */
        }

        th,
        td {
            padding: 5px;
            text-align: left;
            font-weight: 400;
            font-size: 15px;
            border: none;
        }

        th {
            background-color: #f2f2f2;
            color: #363636;
            font-weight: bold;
        }

        tr:nth-child(even) {
            background-color: #f9f9f9;
            color: #202224;
        }


        /* .screens table {
            width: 100%;
           
            height: 350px;
        }

        .screens table,
        .screens th,
        .screens td {
            border: 1px solid #ddd;
        }

        .screens th,
        .screens td {
            padding: 5px;
            text-align: left;
        } */

        .screens .details-btn {
            padding: 5px 10px;
            border: none;
            background: #5bc0de;
            color: #fff;
            cursor: pointer;
        }

        .screens .details-btn:hover {
            background: #31b0d5;
        }



        .view-more-btn {
            /* display: block; */
            /* margin: 20px auto 0; */
            /* padding: 3px 5px;
            border: none;
            border-radius: 10px;
            background: #5bc0de;
            color: #fff;
            cursor: pointer;
            text-align: center;
          margin-left: 60%;
          margin-top: 5px;
          margin-bottom: 5px; */
            /* Frame 12 */

            /* Auto layout */
            display: flex;
            flex-direction: row;
            justify-content: center;
            align-items: center;
            padding: 2px 10px;
            gap: 9px;
            color: #ffffff;
            /* margin-left: 60%; */
            margin-top: 5px;
            margin-bottom: 15px;

            background: #3682f5;
            border-radius: 12px;

        }




        .bold-plus {
            font-weight: bold;
            font-size: 1.3em;
            /* Adjust the size as needed */
            display: flex;
            align-items: center;
        }

        .view-more-btn:hover {
            background: #0B52BB;
        }

        .map iframe {
            /* width: 75.5vh; */
            width: 100%;
            height: 280px;
            border: 0;
            border-radius: 5px;
        }




        /* ---------------------- onclick button css----------------------------------------- */
        .overlay,
        #overlay-playlist {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.3);
            justify-content: center;
            align-items: center;
            z-index: 2;
        }

        hr {
            width: 100%;
            border: none;
            border-top: 1px solid #504e4e80;
            /* margin: 1px 0; */
        }

        .newScreen {
            display: flex;
            flex-direction: column;
            justify-content: center;
            gap: 10px;
            align-items: center;
            background: #ffffff;
            border-radius: 20px;
            border: 0.3px solid #b9b9b9;
            padding: 20px 15px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            width: 50%;
            position: relative;
        }

        .newScreen-header {
            width: 100%;
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-direction: row;
            font-family: Nunito sans-serif;
            font-weight: 800;
            line-height: 19.1px;
            color: #202224;
        }

        .close-btn {
            font-size: 25px;
        }

        .addNewScreen {
            width: 100%;
            display: flex;
            flex-direction: row;
            justify-content: space-around;
            align-items: center;
            column-gap: 20px;
        }

        .addNewScreen-form {
            width: 50%;
        }

        .form-class {
            display: flex;
            flex-direction: column;
            width: 100%;
        }

        .location {
            width: 100%;
            display: flex;
            flex-wrap: wrap;
            justify-content: space-between;
        }

        .location>.form-class {
            width: 49%;
        }

        input,
        textarea {
            border: 1px solid #1c1c1c66;
            padding: 8px !important;
            border-radius: 7px;
        }

        .pairScreen-btn {
            margin-top: 10px;
            background: #0d6efd !important;
            color: #ffffff;
            font-weight: 400;
            border-radius: 7px;
        }

        .map-img {
            width: 50%;
            height: 400px;
            border: 1px solid #1c1c1c33;
            border-radius: 20px;
        }

        .newScreen1 {
            display: flex;
            flex-direction: column;
            justify-content: center;
            gap: 10px;
            align-items: center;
            background: #ffffff;
            border-radius: 20px;
            border: 0.3px solid #b9b9b9;
            padding: 20px 15px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            width: 30%;
            position: relative;
        }

        .newScreen-header {
            width: 100%;
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-direction: row;
            /* font-family: Nunito sans-serif; */
            font-weight: 500;
            line-height: 19.1px;
            color: #202224;
        }

        .addNewScreen-form {
            width: 90%;
        }

        .close-btn {
            font-size: 25px;
        }

        .form-class {
            display: flex;
            flex-direction: column;
            width: 100%;
        }

        input,
        textarea {
            width: 100%;
            border: 1px solid #1c1c1c66;
            padding: 8px !important;
            border-radius: 7px;
            outline: none;
        }

        .form-class textarea {
            resize: none;
        }

        .create-playlist-btn {
            margin-top: 10px;
            background: #0d6efd !important;
            color: #ffffff;
            font-weight: 400;
            border-radius: 7px;
            padding: 8px;
        }
        .status-cell {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100%;
  text-align: center;
}
        .offline {
            background: #dc3545;
            width: 66px;
            height: 25px;
            color: white;
            border-radius: 30px;
            font-size: 12px;
            align-items: center;
            justify-content: center;
        }

        .online {
            background: #20c997;
            width: 66px;
            height: 25px;
            align-items: center;
            justify-content: center;
            color: white;
            border-radius: 30px;
            font-size: 12px;

        }
    </style>

</head>

<body>
    <%- include('Dashboard') %>
        <div class="container">
            <header>
                <div class="home-playlist">
                    <p>Home><b>Dashboard</b></p>
                </div>
                <div class="buttons">
                    <button onclick="addNewScreen()" class="btn1"> <span class="bold-plus">+</span>New Screen</button>
                    <button onclick="addPlaylistBox()" class="btn1"><span class="bold-plus">+</span>New
                        Playlist</button>
                    <!-- <button class="btn1">New Group</button> -->
                    <button onclick="addMedia()" class="btn1"> <span class="bold-plus">+</span>Add Media</button>
                </div>
            </header>

            <!-- start pop up of NEW SCREEN -->
            <div class="overlay" id="overlay">
                <div class="newScreen">
                    <div class="newScreen-header">
                        <h2>NEW SCREEN</h2>
                        <button class="close-btn" onclick="hideNewScreen()">×</button>
                    </div>
                    <hr />

                    <div class="addNewScreen">
                        <div class="addNewScreen-form">
                            <form action="/Dashboard/Screens" method="post">
                                <div class="form-class">
                                    <label>Pairing Code</label>
                                    <input type="number" name="pairingCode" required pattern="\d{6}" min="000000"
                                        max="999999" />
                                </div>
                                <div class="form-class">
                                    <label>Screen Name</label>
                                    <input type="text" name="screenName" required />
                                </div>
                                <div class="form-class">
                                    <label>Tags</label>
                                    <input type="text" name="tags" required />
                                </div>
                                <div class="form-class">
                                    <label>Enter Address</label>
                                    <input type="text" name="location" required />
                                </div>
                                <div class="location">
                                    <div class="form-class">
                                        <label>City</label>
                                        <input type="text" name="city" required />
                                    </div>
                                    <div class="form-class">
                                        <label>State</label>
                                        <input type="text" name="state" required />
                                    </div>
                                    <div class="form-class">
                                        <label>Country</label>
                                        <input type="text" name="country" required />
                                    </div>
                                    <div class="form-class">
                                        <label>Pincode</label>
                                        <input type="text" name="pincode" required />
                                    </div>
                                </div>
                                <div class="form-class pairScreen-btn">
                                    <input type="submit" value="Pair Screen" />
                                </div>
                            </form>
                        </div>
                        <div class="map-img"></div>
                    </div>
                </div>
            </div>

            <!-- END pop up of NEW SCREEN -->

            <!-- start pop up of NEW PLAYLIST -->
            <div class="create-playlist" id="overlay-playlist">
                <div class="newScreen1">
                    <div class="newScreen-header">
                        <h2>NEW PLAYLIST</h2>
                        <button class="close-btn" onclick="hideNewScreenPlaylist()">×</button>
                    </div>
                    <hr />
                    <div class="addNewScreen-form">


                        <div class="form-class">
                            <label>Playlist Name</label>
                            <input type="text" name="playlistName" id="playlistName" required />
                        </div>

                        <div class="form-class">
                            <label>Playlist Description</label>
                            <textarea name="playlistDescription" id="playlistDescription" required></textarea>
                        </div>


                        <div class="form-class create-playlist-btn">
                            <button id="createPlaylistButton">Create Playlist</button>
                        </div>

                    </div>

                </div>
            </div>
            <!-- END pop up of NEW PLAYLIST -->

            <div class="stats-container">
                <div class="stat-item" id="total-screens" onclick="window.location.href='/Dashboard/Screens'">
                    <p>Total Screens</p>
                    <h2><%= totalScreenCount %></h2>
                </div>
            
                <div class="stat-item" id="online-screens" onclick="window.location.href='/Dashboard/OnlineScreens'">
                    <p>Online Screens</p>
                    <h2><%= onlineScreenCount %></h2>
                </div>
            
                <div class="stat-item" id="offline-screens" onclick="window.location.href='/Dashboard/OfflineScreens'">
                    <p>Offline Screens</p>
                    <h2><%= offlineScreenCount %></h2>
                </div>
            
                <div class="stat-item" id="total-media-files" onclick="window.location.href='/Dashboard/Library'">
                    <p>Total Media Files</p>
                    <h2><%= totalMediaFiles %></h2>
                </div>
            
                <div class="stat-item" id="storage-used" >
                    <p>Storage Used</p>
                    <h2 id="storage-used-value">Loading...</h2>
                </div>
            </div>
            
            <div class="main-content">
                <div class="screens" style="width: 50%;height: 339px;">
                    <div style="display: flex;white-space: nowrap;justify-content: space-between; ">
                        <h2>SCREENS/PLAYERS</h2>
                        <button onclick="openScreenTab()" class="view-more-btn">View More ></button>
                    </div>
                    <table style="height: 250px;">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Screen Name</th>
                                <th>Playlist Name</th>
                                <th>Status</th>
                                <th>Last Response</th>
                                <th>Details</th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- <tr>
                            <td>1</td>
                            <td>Orbit Mall, Lift 1</td>
                            <td>Playlist 123</td>
                            <td>2 minutes ago</td>
                            <td><button class="details-btn">Details</button></td>
                        </tr> -->
                            <!-- Repeat for other rows -->

                            <% if (allScreens && allScreens.length) { %>
                                <% allScreens.slice(0, 5).forEach((screen, index)=> { %>
                                    <tr>
                                        <td>
                                            <%= index + 1 %>
                                        </td>
                                        <td id="screen.screenname">
                                            <%= screen.screenname.length> 15 ? screen.screenname.substring(0, 15) +
                                                '...' : screen.screenname %>
                                        </td>
                                        <td id="screen.playlistname">
                                            <%= screen.playlistname && screen.playlistname.length> 15 ?
                                                screen.playlistname.substring(0, 15) + '...' : screen.playlistname %>
                                        </td>
                                        <td id="screen.deleted">
                                            <% screenStatus.forEach(screenStu=> { %>
                                                <% if (screen.screenid==screenStu.client_name) { %>
                                                    <p
                                                        class="status-cell <%= screenStu.status === 'offline' ? 'offline' : 'online' %> ">
                                                        <%= screenStu.status %>
                                                    </p>
                                                    <% } %>
                                                        <% }); %>
                                        </td>
                                        <td id="screen.pincode">


                                            <% function timeSince(dateTime) { const seconds=Math.floor((Date.now() - new
                                                Date(dateTime)) / 1000); let interval=Math.floor(seconds / 86400); if
                                                (interval>= 1) return interval + " day"
                                                + (interval > 1 ? "s" : "") + " ago";

                                                interval = Math.floor(seconds / 3600);
                                                if (interval >= 1) return interval + " hour" + (interval > 1 ? "s" : "")
                                                + " ago";

                                                interval = Math.floor(seconds / 60);
                                                if (interval >= 1) return interval + " minute" + (interval > 1 ? "s" :
                                                "") + " ago";

                                                return seconds + " second" + (seconds > 1 ? "s" : "") + " ago";
                                                }
                                                %>





                                                <% screenStatus.forEach(screenStu=> { %>
                                                    <% if (screen.screenid==screenStu.client_name) { %>


                                                        <%= timeSince(screenStu.updated_at) %>

                                                            <% } %>
                                                                <% }); %>

                                        </td>
                                        <td>
                                            <div class="action">
                                                <button5 onclick="deletePlaylist('${checkbox.value}')">
                                                    <svg width="30" height="30" viewBox="0 0 30 30" fill="none"
                                                        xmlns="http://www.w3.org/2000/svg">
                                                        <circle cx="15" cy="15" r="15" fill="#0D6EFD" />
                                                        <g clip-path="url(#clip0_4058_3466)">
                                                            <path
                                                                d="M15 17.25C16.2426 17.25 17.25 16.2426 17.25 15C17.25 13.7574 16.2426 12.75 15 12.75C13.7574 12.75 12.75 13.7574 12.75 15C12.75 16.2426 13.7574 17.25 15 17.25Z"
                                                                stroke="#FCFCFC" stroke-width="1.5"
                                                                stroke-linecap="round" stroke-linejoin="round" />
                                                            <path
                                                                d="M20.55 17.25C20.4502 17.4762 20.4204 17.7271 20.4645 17.9704C20.5086 18.2137 20.6246 18.4382 20.7975 18.615L20.8425 18.66C20.982 18.7993 21.0926 18.9647 21.1681 19.1468C21.2436 19.3289 21.2824 19.5241 21.2824 19.7213C21.2824 19.9184 21.2436 20.1136 21.1681 20.2957C21.0926 20.4778 20.982 20.6432 20.8425 20.7825C20.7032 20.922 20.5378 21.0326 20.3557 21.1081C20.1736 21.1836 19.9784 21.2224 19.7812 21.2224C19.5841 21.2224 19.3889 21.1836 19.2068 21.1081C19.0247 21.0326 18.8593 20.922 18.72 20.7825L18.675 20.7375C18.4982 20.5646 18.2737 20.4486 18.0304 20.4045C17.7871 20.3604 17.5362 20.3902 17.31 20.49C17.0882 20.5851 16.899 20.7429 16.7657 20.9442C16.6325 21.1454 16.561 21.3812 16.56 21.6225V21.75C16.56 22.1478 16.402 22.5294 16.1207 22.8107C15.8394 23.092 15.4578 23.25 15.06 23.25C14.6622 23.25 14.2806 23.092 13.9993 22.8107C13.718 22.5294 13.56 22.1478 13.56 21.75V21.6825C13.5542 21.4343 13.4738 21.1935 13.3294 20.9915C13.1849 20.7896 12.9831 20.6357 12.75 20.55C12.5238 20.4502 12.2729 20.4204 12.0296 20.4645C11.7863 20.5086 11.5618 20.6246 11.385 20.7975L11.34 20.8425C11.2007 20.982 11.0353 21.0926 10.8532 21.1681C10.6711 21.2436 10.4759 21.2824 10.2787 21.2824C10.0816 21.2824 9.88644 21.2436 9.70434 21.1681C9.52224 21.0926 9.35681 20.982 9.2175 20.8425C9.07804 20.7032 8.9674 20.5378 8.89191 20.3557C8.81642 20.1736 8.77757 19.9784 8.77757 19.7812C8.77757 19.5841 8.81642 19.3889 8.89191 19.2068C8.9674 19.0247 9.07804 18.8593 9.2175 18.72L9.2625 18.675C9.4354 18.4982 9.55139 18.2737 9.5955 18.0304C9.63962 17.7871 9.60984 17.5362 9.51 17.31C9.41493 17.0882 9.25707 16.899 9.05585 16.7657C8.85463 16.6325 8.61884 16.561 8.3775 16.56H8.25C7.85218 16.56 7.47064 16.402 7.18934 16.1207C6.90804 15.8394 6.75 15.4578 6.75 15.06C6.75 14.6622 6.90804 14.2806 7.18934 13.9993C7.47064 13.718 7.85218 13.56 8.25 13.56H8.3175C8.56575 13.5542 8.8065 13.4738 9.00847 13.3294C9.21045 13.1849 9.36429 12.9831 9.45 12.75C9.54984 12.5238 9.57962 12.2729 9.5355 12.0296C9.49139 11.7863 9.3754 11.5618 9.2025 11.385L9.1575 11.34C9.01804 11.2007 8.9074 11.0353 8.83191 10.8532C8.75642 10.6711 8.71757 10.4759 8.71757 10.2787C8.71757 10.0816 8.75642 9.88644 8.83191 9.70434C8.9074 9.52224 9.01804 9.35681 9.1575 9.2175C9.29681 9.07804 9.46224 8.9674 9.64434 8.89191C9.82644 8.81642 10.0216 8.77757 10.2188 8.77757C10.4159 8.77757 10.6111 8.81642 10.7932 8.89191C10.9753 8.9674 11.1407 9.07804 11.28 9.2175L11.325 9.2625C11.5018 9.4354 11.7263 9.55139 11.9696 9.5955C12.2129 9.63962 12.4638 9.60984 12.69 9.51H12.75C12.9718 9.41493 13.161 9.25707 13.2943 9.05585C13.4275 8.85463 13.499 8.61884 13.5 8.3775V8.25C13.5 7.85218 13.658 7.47064 13.9393 7.18934C14.2206 6.90804 14.6022 6.75 15 6.75C15.3978 6.75 15.7794 6.90804 16.0607 7.18934C16.342 7.47064 16.5 7.85218 16.5 8.25V8.3175C16.501 8.55884 16.5725 8.79463 16.7057 8.99585C16.839 9.19707 17.0282 9.35493 17.25 9.45C17.4762 9.54984 17.7271 9.57962 17.9704 9.5355C18.2137 9.49139 18.4382 9.3754 18.615 9.2025L18.66 9.1575C18.7993 9.01804 18.9647 8.9074 19.1468 8.83191C19.3289 8.75642 19.5241 8.71757 19.7213 8.71757C19.9184 8.71757 20.1136 8.75642 20.2957 8.83191C20.4778 8.9074 20.6432 9.01804 20.7825 9.1575C20.922 9.29681 21.0326 9.46224 21.1081 9.64434C21.1836 9.82644 21.2224 10.0216 21.2224 10.2188C21.2224 10.4159 21.1836 10.6111 21.1081 10.7932C21.0326 10.9753 20.922 11.1407 20.7825 11.28L20.7375 11.325C20.5646 11.5018 20.4486 11.7263 20.4045 11.9696C20.3604 12.2129 20.3902 12.4638 20.49 12.69V12.75C20.5851 12.9718 20.7429 13.161 20.9442 13.2943C21.1454 13.4275 21.3812 13.499 21.6225 13.5H21.75C22.1478 13.5 22.5294 13.658 22.8107 13.9393C23.092 14.2206 23.25 14.6022 23.25 15C23.25 15.3978 23.092 15.7794 22.8107 16.0607C22.5294 16.342 22.1478 16.5 21.75 16.5H21.6825C21.4412 16.501 21.2054 16.5725 21.0042 16.7057C20.8029 16.839 20.6451 17.0282 20.55 17.25V17.25Z"
                                                                stroke="#FCFCFC" stroke-width="1.5"
                                                                stroke-linecap="round" stroke-linejoin="round" />
                                                        </g>
                                                        <defs>
                                                            <clipPath id="clip0_4058_3466">
                                                                <rect width="18" height="18" fill="white"
                                                                    transform="translate(6 6)" />
                                                            </clipPath>
                                                        </defs>
                                                    </svg>

                                                </button5>
                                            </div>
                                        </td>
                                    </tr>
                                    <% }); %>
                                        <% } %>

                        </tbody>
                    </table>
                    <!-- <button onclick="openScreenTab()" class="view-more-btn">View More</button> -->
                </div>
                <div class="map" style="width: 40%;height: 339px;">
                    <h2>Screen Location</h2>
                    <iframe
                        src="https://www.google.com/maps/d/u/0/embed?mid=1nNDHwVxe_uS-6wStUoSXOsTyxBM1pw8&ehbc=2E312F&noprof=1"></iframe>
                </div>
            </div>

            <div class="screens" style="width: 50%;height: 260px; margin-top: 20px;">
                <div style="display: flex;white-space: nowrap;justify-content: space-between; ">
                    <h2>ACTIVITY LOG</h2>
                    <button onclick="openLogTab()" class="view-more-btn">View More ></button>
                </div>

                <table>
                    <thead>
                        <tr>
                            <th>Date</th>

                            <th>Message</th>

                        </tr>
                    </thead>
                    <tbody>
                        <% logs.slice(0, 5).forEach(log=> { %>
                            <tr>
                                <td>
                                    <%= log.createdAt %>
                                </td>
                                <td>
                                    <%= log.message.length> 40 ? log.message.substring(0, 40) + '...' : log.message %>
                                </td>

                            </tr>
                            <% }) %>
                    </tbody>
                </table>
                <!-- <button onclick="openLogTab()" class="view-more-btn">View More</button> -->
            </div>
        </div>


        <script>
            document.addEventListener('DOMContentLoaded', () => {
                fetch('/api/cloudinary-storage')
                    .then(response => response.json())
                    .then(data => {
                        console.log('Fetched data:', data); // Debug log
                        const storageUsedElement = document.getElementById('storage-used-value');
                        const storageUsed = data && data.storage && data.storage.usage || 0;
                        console.log('Storage used:', storageUsed); // Debug log
                        storageUsedElement.textContent = `${(storageUsed / (1024 * 1024)).toFixed(2)} mb`;
                    })
                    .catch(error => console.error('Error fetching storage data:', error));
            });


            function addNewScreen() {
                document.getElementById("overlay").style.display = "flex";
            }
            function hideNewScreen() {
                document.getElementById("overlay").style.display = "none";
            }

            function addPlaylistBox() {
                document.getElementById("overlay-playlist").style.display = "flex";
            }
            function hideNewScreenPlaylist() {
                document.getElementById("overlay-playlist").style.display = "none";
            }
            document.getElementById("createPlaylistButton").addEventListener("click", function (event) {
                const playlistName = document.getElementById("playlistName").value;
                const playlistDescription = document.getElementById("playlistDescription").value;

                if (!playlistName || !playlistDescription) {
                    alert("Please fill in all required fields.");
                    event.preventDefault();
                    return;
                }

                sessionStorage.setItem("playlistName", playlistName);
                sessionStorage.setItem("playlistDescription", playlistDescription);

                window.location.href = "/Dashboard/Playlist/newPlaylist";
            });

            function addMedia() {
                window.location.href = "/Dashboard/Library";
            }
            function openScreenTab() {
                window.location.href = "/Dashboard/Screens";
            }
            function openLogTab() {
                window.location.href = "/logs";
            }
        </script>
</body>

</html>
